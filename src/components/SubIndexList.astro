---
// SubIndexList.astro
import { supabase } from "../lib/supabase.js"; // Asegúrate de importar supabase
import CompleteButton from "./CompleteButton.astro";

interface SubIndex {
    id: string;
    title: string;
    description: string;
    stage_id: string;
}

interface Stage {
    id: string;
    title: string;
    description: string;
    order: number;
    todosCompletados?: boolean; // Agregar la propiedad 'todosCompletados' de tipo boolean
}

const { data: curso, error: cursoError } = await supabase
    .from("cursos")
    .select("id, title, description, img")
    .eq("title", "Alaciado")
    .single();

if (cursoError || !curso) {
    console.error(
        "Error al buscar el curso 'Alaciado':",
        cursoError?.message || "Curso no encontrado",
    );
}

// Cargar las etapas (stages) del curso
const { data: etapas, error: etapasError } = (await supabase
    .from("stages")
    .select("id, title, description, order")
    .eq("course_id", curso.id) // Usamos el prop 'curso' aquí
    .order("order")) as { data: Stage[]; error: any };

// Cargar los subíndices
const { data: subindices, error: subindicesError } = await supabase
    .from("subindice")
    .select("id, title, description, stage_id, url");

// Cargar los progresos (completados) del curso
const { data: progreso, error: progresoError } = await supabase
    .from("progress")
    .select("sub_index_id, completed");

// Creamos un mapa para el progreso (true/false) de cada subíndice
const progresoMap = progreso.reduce((acc, { sub_index_id, completed }) => {
    acc[sub_index_id] = completed;
    return acc;
}, {});

if (etapasError || subindicesError || progresoError) {
    console.error(
        "Error al cargar las etapas, subíndices o progreso:",
        etapasError?.message ||
            subindicesError?.message ||
            progresoError?.message,
    );
}
const etapasConCompletado = etapas.map((etapa) => {
    const subindicesDeEtapa = subindices.filter(
        (subindice) => subindice.stage_id === etapa.id,
    );
    // Verificar si todos los subíndices están completados
    etapa.todosCompletados = subindicesDeEtapa.every(
        (subindice) => progresoMap[subindice.id] === true,
    );
    return etapa;
});
---

<section class="etapas-subindices mx-2">
    {
        Array.isArray(etapas) && etapas.length > 0 ? (
            etapas.map((etapa) => (
                <details class="group  bg-[#F8FAFC]  mb-3 rounded-lg">
                    <summary class="flex items-center justify-between cursor-pointer p-4">
                        <div class="flex space-x-2 items-center">
                            {etapa.todosCompletados && (
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    viewBox="0 0 448 512"
                                    class="w-5 h-5 fill-[#a07c62] ml-2"
                                >
                                    <path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z" />
                                </svg>
                            )}
                            <span class="text-lg font-medium text-gray-700">
                                {etapa.title}
                            </span>
                        </div>
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 320 512"
                            class="w-4 h-4 fill-gray-700 group-open:rotate-90 transition-transform"
                        >
                            <path d="M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z" />
                        </svg>
                    </summary>

                    <div class="mt-2 text-gray-600 w-full bg-white rounded-b-lg py-2 px-6">
                        {subindices.length > 0 ? (
                            <ul class="mt-4 list-inside">
                                {subindices
                                    .filter(
                                        (subindice) =>
                                            subindice.stage_id === etapa.id,
                                    )
                                    .map((subindice, index, array) => {
                                        const isCompleted =
                                            progresoMap[subindice.id] || false;
                                        return (
                                            <li
                                                class={`mb-6 pb-5 ${
                                                    index === array.length - 1
                                                        ? ""
                                                        : "border-b border-gray-100"
                                                }`}
                                            >
                                                <a
                                                    class="mb-8 cursor-pointer hover:opacity-70"
                                                    href={subindice.url}
                                                >
                                                    <span class="relative pl-4 flex items-center">
                                                        {/* Si el progreso está completado, mostramos el SVG */}
                                                        {isCompleted ? (
                                                            <svg
                                                                xmlns="http://www.w3.org/2000/svg"
                                                                viewBox="0 0 448 512"
                                                                class="w-4 h-4 fill-[#a07c62]"
                                                            >
                                                                <path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z" />
                                                            </svg>
                                                        ) : null}
                                                        <span class="pl-4 text-[#d6dbe1]">
                                                            |
                                                        </span>
                                                        <h3 class="pl-4">
                                                            {subindice.title}
                                                        </h3>
                                                    </span>
                                                </a>
                                            </li>
                                        );
                                    })}
                            </ul>
                        ) : (
                            <p class="text-gray-500">
                                No hay subíndices disponibles.
                            </p>
                        )}
                    </div>
                </details>
            ))
        ) : (
            <p class="text-gray-500">
                No hay etapas disponibles para este curso.
            </p>
        )
    }
</section>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const detailsElements = document.querySelectorAll("details");

        detailsElements.forEach((details) => {
            details.addEventListener("toggle", (event) => {
                if (details.open) {
                    // Cerrar otros dropdowns abiertos
                    detailsElements.forEach((otherDetails) => {
                        if (otherDetails !== details && otherDetails.open) {
                            otherDetails.open = false;
                        }
                    });
                }
            });
        });
    });
</script>
