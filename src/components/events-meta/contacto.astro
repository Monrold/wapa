---
// ContactButton.astro
const {
  href,
  text = "Contactar",
  eventName = "Contact",
  eventData = {},
  className,
} = Astro.props;
---

<a
  href={href}
  target="_blank"
  class={className}
  data-event-name={eventName}
  data-event-data={JSON.stringify(eventData)}
>
  {text}
</a>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    // 🔥 Seleccionar TODOS los botones con el atributo data-event-name
    const buttons = document.querySelectorAll("a[data-event-name]");
    if (!buttons.length) {
      console.warn("No se encontraron botones de contacto");
      return;
    }

    // 🟢 Función para leer cookies en navegador
    function getCookie(name) {
      return document.cookie
        .split("; ")
        .find((row) => row.startsWith(name + "="))
        ?.split("=")[1];
    }

    buttons.forEach((btn) => {
      btn.addEventListener("click", (e) => {
        e.preventDefault();

        const eventName = btn.dataset.eventName;
        const eventData = JSON.parse(btn.dataset.eventData);

        // 🔑 Generar un ID único por cada clic
        const eventId = `wh-${crypto.randomUUID()}`;

        console.log(`📤 Click en ${eventName} con ID: ${eventId}`);

        // --- Pixel del navegador ---
        if (window.fbq) {
          fbq("track", eventName, {
            ...eventData,
            event_id: eventId, // ✅ Pasar el ID al pixel
          });
          console.log(`✅ Pixel navegador enviado con ID: ${eventId}`);
        }

        // --- API del servidor (CAPI) ---
        fetch("https://metaevents.soporte-draw.workers.dev", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            event_name: eventName,
            event_time: Math.floor(Date.now() / 1000),
            action_source: "website",
            event_source_url: window.location.href,
            user_data: {
              client_ip_address: "NO_HASH_IP", // IP la inyectará el Worker
              client_user_agent: navigator.userAgent,
              fbp: getCookie("_fbp"),
              fbc: getCookie("_fbc"),
            },
            custom_data: eventData,
            event_id: eventId, // ✅ Mandar el mismo ID al Worker
          }),
        })
          .then(() => console.log(`📡 Evento enviado a Worker con ID: ${eventId}`))
          .catch((err) => console.error("❌ Error CAPI:", err));

        // --- Abrir WhatsApp después de 200ms ---
        setTimeout(() => {
          window.open(btn.href, "_blank");
        }, 200);
      });
    });
  });
</script>
