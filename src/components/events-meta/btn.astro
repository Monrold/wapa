---
const {
  href,
  text,
  className,
  eventName = "InitiateCheckout",
  eventData = { value: 0, currency: "MXN" },
} = Astro.props;
---

<a
  href={href}
  data-event-name={eventName}
  data-event-data={JSON.stringify(eventData)}
  class={`trackBtn ${className}`}
>
  {text}
</a>

<script is:inline>
  (function () {
    function getCookie(name) {
      return decodeURIComponent(
        document.cookie
          .split("; ")
          .find((row) => row.startsWith(name + "="))
          ?.split("=")[1] || ""
      );
    }

    function sendEvent(btn) {
      const eventName = btn.dataset.eventName;

      // ✅ Parseo seguro
      let customData = { value: 0, currency: "MXN" };
      try {
        customData = btn.dataset.eventData
          ? JSON.parse(btn.dataset.eventData)
          : customData;
      } catch {
        console.warn("⚠️ Error al parsear data-event-data, usando valores por defecto.");
      }

      // ✅ Nuevo event_id por cada clic
      const eventId = `${Date.now()}-${Math.floor(Math.random() * 10000)}`;
      const fbp = getCookie("_fbp");
      const fbc = getCookie("_fbc");

      const user_data = {
        client_ip_address: "NO_HASH_IP",
        client_user_agent: navigator.userAgent,
        ...(fbp && { fbp }),
        ...(fbc && { fbc }),
      };

      console.log("📤 [TrackButton] Enviando evento CAPI+Pixel:", {
        eventName,
        eventId,
        customData,
        user_data,
      });

      // 👉 Pixel navegador
      if (window.fbq) {
        fbq("track", eventName, { ...customData, event_id: eventId });
      }

      // 👉 CAPI (sendBeacon)
      try {
        const payload = JSON.stringify({
          event_name: eventName,
          event_id: eventId,
          event_time: Math.floor(Date.now() / 1000),
          action_source: "website",
          event_source_url: window.location.href,
          user_data,
          custom_data: customData,
        });
        navigator.sendBeacon(
          "https://metaevents.soporte-draw.workers.dev",
          payload
        );
      } catch (err) {
        console.error("❌ Error al enviar evento:", err);
      }

      // ⏳ Delay para garantizar envío
      setTimeout(() => (window.location.href = btn.href), 250);
    }

    document.addEventListener("DOMContentLoaded", () => {
      const buttons = document.querySelectorAll("a[data-event-name]");

      buttons.forEach((btn) => {
        if (btn.dataset.listenerAttached === "true") return; // evitar duplicados
        btn.dataset.listenerAttached = "true";

        btn.addEventListener("click", (e) => {
          e.preventDefault();
          sendEvent(btn);
        });
      });
    });
  })();
</script>
